Microsoft Windows [Version 10.0.17134.523]
(c) 2018 Microsoft Corporation. All rights reserved.

E:\git practice>git init
Initialized empty Git repository in E:/git practice/.git/

E:\git practice>git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        wedclass.html

nothing added to commit but untracked files present (use "git add" to track)

E:\git practice>git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        index.html

nothing added to commit but untracked files present (use "git add" to track)

E:\git practice>git add index.html

E:\git practice>git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)

        new file:   index.html


E:\git practice>git commit
Aborting commit due to empty commit message.

E:\git practice>git commit -m "This is my first commit"
[master (root-commit) 4523834] This is my first commit
 1 file changed, 24 insertions(+)
 create mode 100644 index.html

E:\git practice>git status
On branch master
nothing to commit, working tree clean

E:\git practice>git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   index.html

no changes added to commit (use "git add" and/or "git commit -a")

E:\git practice>git commit -m "This is my 2nd commit"
On branch master
Changes not staged for commit:
        modified:   index.html

no changes added to commit

E:\git practice>git add .

E:\git practice>git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        modified:   index.html


E:\git practice>git commit -m "This is my 2nd commit"
[master 187a927] This is my 2nd commit
 1 file changed, 1 insertion(+), 6 deletions(-)

E:\git practice>git add style.css

E:\git practice>git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        new file:   style.css

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   index.html


E:\git practice>git add .

E:\git practice>git commit -m "this is my 3rd commit"
[master 825d993] this is my 3rd commit
 2 files changed, 50 insertions(+), 1 deletion(-)
 create mode 100644 style.css

E:\git practice>git space log
git: 'space' is not a git command. See 'git --help'.

The most similar commands are
        replace
        stage

E:\git practice>git log
commit 825d99374b6bae490e0ad82bc829927b37be3b07 (HEAD -> master)
Author: suleman84 <sulemanshakil84@yahoo.com>
Date:   Thu Jan 31 16:27:34 2019 +0500

    this is my 3rd commit

commit 187a927cfdd1d613b662717d96739612ca06263f
Author: suleman84 <sulemanshakil84@yahoo.com>
Date:   Thu Jan 31 16:24:39 2019 +0500

    This is my 2nd commit

commit 45238347e778972b0a9a3e81bef745d638aa13e8
Author: suleman84 <sulemanshakil84@yahoo.com>
Date:   Thu Jan 31 16:14:38 2019 +0500

    This is my first commit

E:\git practice>git remote add origin https://github.com/suleman84/webapp.git

E:\git practice>git push origin master
To https://github.com/suleman84/webapp.git
 ! [rejected]        master -> master (fetch first)
error: failed to push some refs to 'https://github.com/suleman84/webapp.git'
hint: Updates were rejected because the remote contains work that you do
hint: not have locally. This is usually caused by another repository pushing
hint: to the same ref. You may want to first integrate the remote changes
hint: (e.g., 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.

E:\git practice>git push --help

E:\git practice>git pull origin master
warning: no common commits
remote: Enumerating objects: 3, done.
remote: Counting objects: 100% (3/3), done.
remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
Unpacking objects: 100% (3/3), done.
From https://github.com/suleman84/webapp
 * branch            master     -> FETCH_HEAD
 * [new branch]      master     -> origin/master
fatal: refusing to merge unrelated histories

E:\git practice>git pull origin master --allow-unrealted-histories
error: unknown option `allow-unrealted-histories'
usage: git pull [<options>] [<repository> [<refspec>...]]

    -v, --verbose         be more verbose
    -q, --quiet           be more quiet
    --progress            force progress reporting
    --recurse-submodules[=<on-demand>]
                          control for recursive fetching of submodules

Options related to merging
    -r, --rebase[=(false|true|merges|preserve|interactive)]
                          incorporate changes by rebasing rather than merging
    -n                    do not show a diffstat at the end of the merge
    --stat                show a diffstat at the end of the merge
    --log[=<n>]           add (at most <n>) entries from shortlog to merge commit message
    --signoff[=...]       add Signed-off-by:
    --squash              create a single commit instead of doing a merge
    --commit              perform a commit if the merge succeeds (default)
    --edit                edit message before committing
    --ff                  allow fast-forward
    --ff-only             abort if fast-forward is not possible
    --verify-signatures   verify that the named commit has a valid GPG signature
    --autostash           automatically stash/stash pop before and after rebase
    -s, --strategy <strategy>
                          merge strategy to use
    -X, --strategy-option <option=value>
                          option for selected merge strategy
    -S, --gpg-sign[=<key-id>]
                          GPG sign commit
    --allow-unrelated-histories
                          allow merging unrelated histories

Options related to fetching
    --all                 fetch from all remotes
    -a, --append          append to .git/FETCH_HEAD instead of overwriting
    --upload-pack <path>  path to upload pack on remote end
    -f, --force           force overwrite of local branch
    -t, --tags            fetch all tags and associated objects
    -p, --prune           prune remote-tracking branches no longer on remote
    -j, --jobs[=<n>]      number of submodules pulled in parallel
    --dry-run             dry run
    -k, --keep            keep downloaded pack
    --depth <depth>       deepen history of shallow clone
    --unshallow           convert to a complete repository
    --update-shallow      accept refs that update .git/shallow
    --refmap <refmap>     specify fetch refmap
    -4, --ipv4            use IPv4 addresses only
    -6, --ipv6            use IPv6 addresses only


E:\git practice>git pull origin master --allow-unrelated-histories
From https://github.com/suleman84/webapp
 * branch            master     -> FETCH_HEAD
Merge made by the 'recursive' strategy.
 README.md | 1 +
 1 file changed, 1 insertion(+)
 create mode 100644 README.md

E:\git practice>git push origin master
Enumerating objects: 12, done.
Counting objects: 100% (12/12), done.
Delta compression using up to 4 threads
Compressing objects: 100% (9/9), done.
Writing objects: 100% (11/11), 1.57 KiB | 160.00 KiB/s, done.
Total 11 (delta 1), reused 0 (delta 0)
remote: Resolving deltas: 100% (1/1), done.
To https://github.com/suleman84/webapp.git
   ef294cc..a9ce6de  master -> master

E:\git practice>